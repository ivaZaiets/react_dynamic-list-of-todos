{"version":3,"sources":["helpers/Select.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Select","TodoList","todos","isTodoSelected","onTodoSelect","className","map","todo","cn","id","completed","title","type","onClick","TodoFilter","query","onQueryChange","select","onSelectChange","value","onChange","event","target","all","active","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","useEffect","userId","href","email","name","App","setTodos","setQuery","setSelect","setIsTodoSelected","catch","error","normalizeQuery","toLowerCase","trim","filteredTodos","filter","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.493dbe87.chunk.js","sourcesContent":["export enum Select {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import cn from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  isTodoSelected?: Todo | null,\n  onTodoSelect: (value: Todo | null) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  isTodoSelected,\n  onTodoSelect,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n      <tbody>\n\n        {todos.map(todo => (\n          <tr\n            className={cn({\n              'has-background-info-light': isTodoSelected?.id === todo.id,\n            })}\n            data-cy=\"todo\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={cn({\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onTodoSelect(todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={cn('far', {\n                      'fa-eye-slash': isTodoSelected?.id === todo.id,\n                      'fa-eye': isTodoSelected?.id !== todo.id,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Select } from '../../helpers/Select';\n\ntype Props = {\n  query: string,\n  onQueryChange: (value: string) => void,\n  select: string\n  onSelectChange: (value: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  onQueryChange,\n  select,\n  onSelectChange,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={select}\n            onChange={(event) => {\n              onSelectChange(event.target.value);\n            }}\n          >\n            <option value={Select.all}>All</option>\n            <option value={Select.active}>Active</option>\n            <option value={Select.completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => {\n            onQueryChange(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span\n          className=\"icon is-right\"\n          style={{ pointerEvents: 'all' }}\n        >\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          {query && (\n            <button\n              aria-label=\"button\"\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onQueryChange('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport cn from 'classnames';\n\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\nimport { getUser } from '../../api';\n\nimport { Loader } from '../Loader';\n\ntype Props = {\n  isTodoSelected: Todo,\n  onTodoSelect: (value: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  isTodoSelected,\n  onTodoSelect = () => { },\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(isTodoSelected.userId)\n      .then(setUser);\n  }, [isTodoSelected.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {user ? (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${isTodoSelected.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"modal-close\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onTodoSelect(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {isTodoSelected.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong className={cn({\n                'has-text-danger': !isTodoSelected.completed,\n                'has-text-success': isTodoSelected.completed,\n              })}\n              >\n                {!isTodoSelected.completed ? (\n                  'Planned'\n                ) : (\n                  'Done'\n                )}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      ) : (\n        <Loader />\n      )}\n\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { TodoModal } from './components/TodoModal';\n\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nimport { Select } from './helpers/Select';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [select, setSelect] = useState('all');\n  const [isTodoSelected, setIsTodoSelected] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos)\n      .catch(error => error);\n  }, []);\n\n  const normalizeQuery = query.toLowerCase().trim();\n\n  let filteredTodos = todos.filter((todo) => (\n    (todo.title.toLowerCase().includes(normalizeQuery))\n  ));\n\n  switch (select) {\n    case Select.all:\n      filteredTodos = filteredTodos.filter(todo => todo);\n      break;\n    case Select.active:\n      filteredTodos = filteredTodos.filter(todo => todo.completed === false);\n      break;\n    case Select.completed:\n      filteredTodos = filteredTodos.filter(todo => todo.completed === true);\n      break;\n    default:\n      return null;\n  }\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onQueryChange={setQuery}\n                query={query}\n                select={select}\n                onSelectChange={setSelect}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0 ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={filteredTodos}\n                  isTodoSelected={isTodoSelected}\n                  onTodoSelect={setIsTodoSelected}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {isTodoSelected && (\n        <TodoModal\n          isTodoSelected={isTodoSelected}\n          onTodoSelect={setIsTodoSelected}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}